"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentInspector = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = __importDefault(require("react"));
var ColorPicker_1 = require("./ColorPicker");
var ComponentInspector = function (_a) {
    var selectedComponent = _a.selectedComponent, updateComponent = _a.updateComponent, deleteComponent = _a.deleteComponent, duplicateComponent = _a.duplicateComponent;
    var _b = react_1.default.useState(false), showDeleteConfirm = _b[0], setShowDeleteConfirm = _b[1];
    var _c = react_1.default.useState({
        header: true,
        address: true,
        social: true,
        unsubscribe: true
    }), footerPanels = _c[0], setFooterPanels = _c[1];
    // Track visibility states for header, text, image, and button fields
    var _d = react_1.default.useState({
        title: true,
        subtitle: true,
        logo: true,
        text: true,
        image: true,
        button: true
    }), fieldVisibility = _d[0], setFieldVisibility = _d[1];
    // Track spacer height mode
    var _e = react_1.default.useState('medium'), spacerHeightMode = _e[0], setSpacerHeightMode = _e[1];
    // Initialize spacer height mode when component changes
    react_1.default.useEffect(function () {
        if (selectedComponent.type === 'spacer') {
            var currentHeight = selectedComponent.props.height || '20px';
            if (currentHeight === '10px')
                setSpacerHeightMode('small');
            else if (currentHeight === '20px')
                setSpacerHeightMode('medium');
            else if (currentHeight === '40px')
                setSpacerHeightMode('large');
            else
                setSpacerHeightMode('custom');
        }
    }, [selectedComponent]);
    var handlePropertyChange = function (key, value) {
        var _a;
        updateComponent(selectedComponent.id, {
            props: __assign(__assign({}, selectedComponent.props), (_a = {}, _a[key] = value, _a)),
        });
    };
    var toggleFieldVisibility = function (field) {
        var _a;
        setFieldVisibility(function (prev) {
            var _a;
            return (__assign(__assign({}, prev), (_a = {}, _a[field] = !prev[field], _a)));
        });
        // Update component with visibility state
        updateComponent(selectedComponent.id, {
            props: __assign(__assign({}, selectedComponent.props), (_a = {}, _a["".concat(field, "Visible")] = !fieldVisibility[field], _a)),
        });
    };
    // Helper function to determine padding preset based on current value
    var getPaddingPreset = function (padding) {
        if (padding === '8px 16px')
            return 'small';
        if (padding === '12px 24px')
            return 'medium';
        if (padding === '16px 32px')
            return 'large';
        return 'custom';
    };
    // Handler for padding preset changes
    var handlePaddingPresetChange = function (preset) {
        var newPadding;
        switch (preset) {
            case 'small':
                newPadding = '8px 16px';
                break;
            case 'medium':
                newPadding = '12px 24px';
                break;
            case 'large':
                newPadding = '16px 32px';
                break;
            case 'custom':
                newPadding = '12px 16px 12px 16px';
                break;
            default:
                newPadding = selectedComponent.props.padding || '12px 24px';
        }
        handlePropertyChange('padding', newPadding);
    };
    // Helper function to get individual padding value by index
    var getPaddingValue = function (padding, index) {
        var values = padding.split(' ');
        return values[index] || '';
    };
    // Helper function to update individual padding side
    var updatePaddingSide = function (index, value) {
        var currentPadding = selectedComponent.props.padding || '12px 24px';
        var values = currentPadding.split(' ');
        // Ensure we have 4 values for custom padding
        while (values.length < 4) {
            values.push('12px');
        }
        // Update the specific side
        values[index] = value;
        // Join back into padding string
        var newPadding = values.join(' ');
        handlePropertyChange('padding', newPadding);
    };
    // Helper function to get individual margin value by index
    var getMarginValue = function (margin, index) {
        var values = margin.split(' ');
        return values[index] || '';
    };
    // Helper function to update individual margin side
    var updateMarginSide = function (index, value) {
        var currentMargin = selectedComponent.props.margin || '2px 2px';
        var values = currentMargin.split(' ');
        // Ensure we have 2 values for margin (top bottom)
        while (values.length < 2) {
            values.push('2px');
        }
        // Update the specific side
        values[index] = value;
        // Join back into margin string
        var newMargin = values.join(' ');
        handlePropertyChange('margin', newMargin);
    };
    // Helper function to determine height preset based on current value
    var getHeightPreset = function (height) {
        if (height === '10px')
            return 'small';
        if (height === '20px')
            return 'medium';
        if (height === '40px')
            return 'large';
        // If it's not one of the presets, it's custom
        return 'custom';
    };
    // Handler for height preset changes
    var handleHeightPresetChange = function (preset) {
        // Update the spacer height mode state
        setSpacerHeightMode(preset);
        var newHeight;
        switch (preset) {
            case 'small':
                newHeight = '10px';
                break;
            case 'medium':
                newHeight = '20px';
                break;
            case 'large':
                newHeight = '40px';
                break;
            case 'custom':
                // When custom is selected, keep the current height value
                // This ensures the custom input field shows up with the current value
                newHeight = selectedComponent.props.height || '20px';
                break;
            default:
                newHeight = selectedComponent.props.height || '20px';
        }
        handlePropertyChange('height', newHeight);
    };
    var handleDelete = function () {
        setShowDeleteConfirm(true);
    };
    var confirmDelete = function () {
        deleteComponent(selectedComponent.id);
        setShowDeleteConfirm(false);
    };
    var cancelDelete = function () {
        setShowDeleteConfirm(false);
    };
    var handleDuplicate = function () {
        duplicateComponent(selectedComponent.id);
    };
    var renderPropertyEditor = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
        switch (selectedComponent.type) {
            case 'header':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Title" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.title || '', onChange: function (e) { return handlePropertyChange('title', e.target.value); }, className: "input-field pr-8", placeholder: "Company Name" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('title'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.title ? "Hide title" : "Show title" }, { children: fieldVisibility.title ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Subtitle" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.subtitle || '', placeholder: "Tagline or description", onChange: function (e) { return handlePropertyChange('subtitle', e.target.value); }, className: "input-field pr-8" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('subtitle'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.subtitle ? "Hide subtitle" : "Show subtitle" }, { children: fieldVisibility.subtitle ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.backgroundColor || '#ffffff', onChange: function (color) { return handlePropertyChange('backgroundColor', color); }, label: "Background Color", placeholder: "Select background color" }) }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.textColor || '#000000', onChange: function (color) { return handlePropertyChange('textColor', color); }, label: "Text Color", placeholder: "Select text color" }) })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Logo URL" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.logo || '', onChange: function (e) { return handlePropertyChange('logo', e.target.value); }, className: "input-field pr-8", placeholder: "https://example.com/logo.png" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('logo'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.logo ? "Hide logo" : "Show logo" }, { children: fieldVisibility.logo ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Logo Width" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.logoWidth || '200px', onChange: function (e) { return handlePropertyChange('logoWidth', e.target.value); }, className: "input-field pr-8", placeholder: "200px, 100%, auto" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('logoWidth', '200px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (200px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Logo Height" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.logoHeight || '60px', onChange: function (e) { return handlePropertyChange('logoHeight', e.target.value); }, className: "input-field pr-8", placeholder: "60px, 80px, auto" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('logoHeight', '60px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (60px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'text':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Content" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("textarea", { value: selectedComponent.props.content || '', onChange: function (e) { return handlePropertyChange('content', e.target.value); }, className: "input-field pr-8", rows: 4, placeholder: "Enter your text content here..." }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('text'); }, className: "absolute right-2 top-2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.text ? "Hide text" : "Show text" }, { children: fieldVisibility.text ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Font Size" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.fontSize || '16px', onChange: function (e) { return handlePropertyChange('fontSize', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "12px" }, { children: "12px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "14px" }, { children: "14px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "16px" }, { children: "16px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "18px" }, { children: "18px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "20px" }, { children: "20px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "24px" }, { children: "24px" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Font Weight" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.fontWeight || 'normal', onChange: function (e) { return handlePropertyChange('fontWeight', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "normal" }, { children: "Normal" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "medium" }, { children: "Medium" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "semibold" }, { children: "Semibold" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "bold" }, { children: "Bold" }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Text Align" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.textAlign || 'left', onChange: function (e) { return handlePropertyChange('textAlign', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "left" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "center" }, { children: "Center" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "right" }, { children: "Right" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Line Height" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.lineHeight || '1.5', onChange: function (e) { return handlePropertyChange('lineHeight', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "1.2" }, { children: "1.2 (Tight)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "1.4" }, { children: "1.4 (Compact)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "1.5" }, { children: "1.5 (Normal)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "1.6" }, { children: "1.6 (Relaxed)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "1.8" }, { children: "1.8 (Loose)" }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.color || '#000000', onChange: function (color) { return handlePropertyChange('color', color); }, label: "Text Color", placeholder: "Select text color" }) }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.backgroundColor || 'transparent', onChange: function (color) { return handlePropertyChange('backgroundColor', color); }, label: "Background Color", placeholder: "Select background color" }) })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.001 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'image':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Image URL" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.src || '', onChange: function (e) { return handlePropertyChange('src', e.target.value); }, className: "input-field pr-8", placeholder: "https://example.com/image.jpg" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('image'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.image ? "Hide image" : "Show image" }, { children: fieldVisibility.image ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Alt Text" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.alt || '', onChange: function (e) { return handlePropertyChange('alt', e.target.value); }, className: "input-field", placeholder: "Description of the image" })] }), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Width" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.width || '100%', onChange: function (e) { return handlePropertyChange('width', e.target.value); }, className: "input-field pr-8", placeholder: "100% or 300px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('width', '100%'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (100%)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Height" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.height || 'auto', onChange: function (e) { return handlePropertyChange('height', e.target.value); }, className: "input-field pr-8", placeholder: "auto or 200px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('height', 'auto'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (auto)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Alignment" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.align || 'center', onChange: function (e) { return handlePropertyChange('align', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "left" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "center" }, { children: "Center" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "right" }, { children: "Right" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Border Radius" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.borderRadius || '0px', onChange: function (e) { return handlePropertyChange('borderRadius', e.target.value); }, className: "input-field pr-8", placeholder: "0px, 8px, 50%" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('borderRadius', '0px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (0px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'button':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Button Text" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.text || 'Click Here', onChange: function (e) { return handlePropertyChange('text', e.target.value); }, className: "input-field pr-8", placeholder: "Click Here" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return toggleFieldVisibility('button'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: fieldVisibility.button ? "Hide button" : "Show button" }, { children: fieldVisibility.button ? ((0, jsx_runtime_1.jsxs)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: [(0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z" }), (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" })] }))) : ((0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21" }) }))) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.url || '', onChange: function (e) { return handlePropertyChange('url', e.target.value); }, className: "input-field", placeholder: "https://example.com" })] }), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.backgroundColor || '#3b82f6', onChange: function (color) { return handlePropertyChange('backgroundColor', color); }, label: "Background Color", placeholder: "Select background color" }) }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.textColor || '#ffffff', onChange: function (color) { return handlePropertyChange('textColor', color); }, label: "Text Color", placeholder: "Select text color" }) })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Border Radius" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.borderRadius || '6px', onChange: function (e) { return handlePropertyChange('borderRadius', e.target.value); }, className: "input-field pr-8", placeholder: "6px, 12px, 50%" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('borderRadius', '6px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (6px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Font Size" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.fontSize || '16px', onChange: function (e) { return handlePropertyChange('fontSize', e.target.value); }, className: "input-field pr-8", placeholder: "14px, 16px, 18px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('fontSize', '16px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (16px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Button Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-2" }, { children: [(0, jsx_runtime_1.jsxs)("select", __assign({ value: getPaddingPreset(selectedComponent.props.padding || '12px 24px'), onChange: function (e) { return handlePaddingPresetChange(e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "small" }, { children: "Small" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "medium" }, { children: "Medium (Default)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "large" }, { children: "Large" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "custom" }, { children: "Custom" }))] })), getPaddingPreset(selectedComponent.props.padding || '12px 24px') === 'custom' && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Top" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: getPaddingValue(selectedComponent.props.padding || '12px 24px', 0) || '12px', onChange: function (e) { return updatePaddingSide(0, e.target.value); }, className: "input-field text-sm", placeholder: "12px" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Right" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: getPaddingValue(selectedComponent.props.padding || '12px 24px', 1) || '16px', onChange: function (e) { return updatePaddingSide(1, e.target.value); }, className: "input-field text-sm", placeholder: "16px" })] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Bottom" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: getPaddingValue(selectedComponent.props.padding || '12px 24px', 2) || '12px', onChange: function (e) { return updatePaddingSide(2, e.target.value); }, className: "input-field text-sm", placeholder: "12px" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: getPaddingValue(selectedComponent.props.padding || '12px 24px', 3) || '16px', onChange: function (e) { return updatePaddingSide(3, e.target.value); }, className: "input-field text-sm", placeholder: "16px" })] })] })), (0, jsx_runtime_1.jsx)("div", __assign({ className: "flex justify-end" }, { children: (0, jsx_runtime_1.jsxs)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '12px 24px'); }, className: "text-sm text-gray-500 hover:text-gray-700 transition-colors flex items-center gap-1", title: "Reset to default (12px 24px)" }, { children: [(0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })), "Reset to Default"] })) }))] })))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.canvasPadding || '5px', onChange: function (e) { return handlePropertyChange('canvasPadding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px (Container spacing)" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('canvasPadding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'divider':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Line Color" })), (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.color || '#e5e7eb', onChange: function (color) { return handlePropertyChange('color', color); }, label: "", placeholder: "Select line color" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Thickness" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.height || '1px', onChange: function (e) { return handlePropertyChange('height', e.target.value); }, className: "input-field pr-8", placeholder: "1px, 2px, 3px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('height', '1px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (1px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Margin Top" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: getMarginValue(selectedComponent.props.margin || '2px 2px', 0) || '2px', onChange: function (e) { return updateMarginSide(0, e.target.value); }, className: "input-field pr-8", placeholder: "2px, 5px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return updateMarginSide(0, '2px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (2px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Margin Bottom" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: getMarginValue(selectedComponent.props.margin || '2px 2px', 1) || '2px', onChange: function (e) { return updateMarginSide(1, e.target.value); }, className: "input-field pr-8", placeholder: "2px, 5px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return updateMarginSide(1, '2px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (2px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] }))] })));
            case 'spacer':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Height" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-2" }, { children: [(0, jsx_runtime_1.jsxs)("select", __assign({ value: spacerHeightMode, onChange: function (e) { return handleHeightPresetChange(e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "small" }, { children: "Small (10px)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "medium" }, { children: "Medium (20px)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "large" }, { children: "Large (40px)" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "custom" }, { children: "Custom" }))] })), spacerHeightMode === 'custom' && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.height || '20px', onChange: function (e) { return handlePropertyChange('height', e.target.value); }, className: "input-field pr-8", placeholder: "20px, 50px, 100px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('height', '20px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (20px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] })))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'footer':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "border border-gray-200 rounded-lg" }, { children: [(0, jsx_runtime_1.jsxs)("button", __assign({ onClick: function () { return setFooterPanels(function (prev) { return (__assign(__assign({}, prev), { header: !prev.header })); }); }, className: "flex items-center justify-between w-full p-3 text-left hover:bg-gray-50 transition-colors" }, { children: [(0, jsx_runtime_1.jsx)("h4", __assign({ className: "text-sm font-medium text-gray-700" }, { children: "Header" })), (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4 text-gray-500 transition-transform ".concat(footerPanels.header ? 'rotate-180' : ''), fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) }))] })), footerPanels.header && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "p-3 border-t border-gray-200 space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.companyName || '', onChange: function (e) { return handlePropertyChange('companyName', e.target.value); }, className: "input-field", placeholder: "Company Name" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Content Alignment" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.contentAlignment || 'center', onChange: function (e) { return handlePropertyChange('contentAlignment', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "left" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "center" }, { children: "Center" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "right" }, { children: "Right" }))] }))] }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.backgroundColor || 'transparent', onChange: function (color) { return handlePropertyChange('backgroundColor', color); }, label: "Background Color", placeholder: "Select background color" }) })] })))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "border border-gray-200 rounded-lg" }, { children: [(0, jsx_runtime_1.jsxs)("button", __assign({ onClick: function () { return setFooterPanels(function (prev) { return (__assign(__assign({}, prev), { address: !prev.address })); }); }, className: "flex items-center justify-between w-full p-3 text-left hover:bg-gray-50 transition-colors" }, { children: [(0, jsx_runtime_1.jsx)("h4", __assign({ className: "text-sm font-medium text-gray-700" }, { children: "Address" })), (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4 text-gray-500 transition-transform ".concat(footerPanels.address ? 'rotate-180' : ''), fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) }))] })), footerPanels.address && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "p-3 border-t border-gray-200 space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Address" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.address || '', onChange: function (e) { return handlePropertyChange('address', e.target.value); }, className: "input-field", placeholder: "123 Main St, City, State 12345" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Phone" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.phone || '', onChange: function (e) { return handlePropertyChange('phone', e.target.value); }, className: "input-field", placeholder: "+1 (555) 123-4567" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Email" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.email || '', onChange: function (e) { return handlePropertyChange('email', e.target.value); }, className: "input-field", placeholder: "info@company.com" })] })] })))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "border border-gray-200 rounded-lg" }, { children: [(0, jsx_runtime_1.jsxs)("button", __assign({ onClick: function () { return setFooterPanels(function (prev) { return (__assign(__assign({}, prev), { social: !prev.social })); }); }, className: "flex items-center justify-between w-full p-3 text-left hover:bg-gray-50 transition-colors" }, { children: [(0, jsx_runtime_1.jsx)("h4", __assign({ className: "text-sm font-medium text-gray-700" }, { children: "Social Links" })), (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4 text-gray-500 transition-transform ".concat(footerPanels.social ? 'rotate-180' : ''), fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) }))] })), footerPanels.social && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "p-3 border-t border-gray-200 space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Facebook Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_b = (_a = selectedComponent.props.socialLinks) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.title) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[0]) {
                                                            newSocialLinks[0] = __assign(__assign({}, newSocialLinks[0]), { title: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Facebook', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/facebook.svg', url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "Facebook" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Facebook Icon URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_d = (_c = selectedComponent.props.socialLinks) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.imageUrl) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[0]) {
                                                            newSocialLinks[0] = __assign(__assign({}, newSocialLinks[0]), { imageUrl: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Facebook', imageUrl: e.target.value, url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://example.com/facebook-icon.svg" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Facebook Profile URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_f = (_e = selectedComponent.props.socialLinks) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.url) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[0]) {
                                                            newSocialLinks[0] = __assign(__assign({}, newSocialLinks[0]), { url: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Facebook', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/facebook.svg', url: e.target.value });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://facebook.com/company" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Twitter Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_h = (_g = selectedComponent.props.socialLinks) === null || _g === void 0 ? void 0 : _g[1]) === null || _h === void 0 ? void 0 : _h.title) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[1]) {
                                                            newSocialLinks[1] = __assign(__assign({}, newSocialLinks[1]), { title: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Twitter', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/twitter.svg', url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "Twitter" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Twitter Icon URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_k = (_j = selectedComponent.props.socialLinks) === null || _j === void 0 ? void 0 : _j[1]) === null || _k === void 0 ? void 0 : _k.imageUrl) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[1]) {
                                                            newSocialLinks[1] = __assign(__assign({}, newSocialLinks[1]), { imageUrl: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Twitter', imageUrl: e.target.value, url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://example.com/twitter-icon.svg" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Twitter Profile URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_m = (_l = selectedComponent.props.socialLinks) === null || _l === void 0 ? void 0 : _l[1]) === null || _m === void 0 ? void 0 : _m.url) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[1]) {
                                                            newSocialLinks[1] = __assign(__assign({}, newSocialLinks[1]), { url: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'Twitter', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/twitter.svg', url: e.target.value });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://twitter.com/company" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "LinkedIn Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_p = (_o = selectedComponent.props.socialLinks) === null || _o === void 0 ? void 0 : _o[2]) === null || _p === void 0 ? void 0 : _p.title) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[2]) {
                                                            newSocialLinks[2] = __assign(__assign({}, newSocialLinks[2]), { title: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'LinkedIn', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/linkedin.svg', url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "LinkedIn" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "LinkedIn Icon URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_r = (_q = selectedComponent.props.socialLinks) === null || _q === void 0 ? void 0 : _q[2]) === null || _r === void 0 ? void 0 : _r.imageUrl) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[2]) {
                                                            newSocialLinks[2] = __assign(__assign({}, newSocialLinks[2]), { imageUrl: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'LinkedIn', imageUrl: e.target.value, url: '#' });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://example.com/linkedin-icon.svg" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "LinkedIn Profile URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: ((_t = (_s = selectedComponent.props.socialLinks) === null || _s === void 0 ? void 0 : _s[2]) === null || _t === void 0 ? void 0 : _t.url) || '', onChange: function (e) {
                                                        var newSocialLinks = __spreadArray([], (selectedComponent.props.socialLinks || []), true);
                                                        if (newSocialLinks[2]) {
                                                            newSocialLinks[2] = __assign(__assign({}, newSocialLinks[2]), { url: e.target.value });
                                                        }
                                                        else {
                                                            newSocialLinks.push({ title: 'LinkedIn', imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/linkedin.svg', url: e.target.value });
                                                        }
                                                        handlePropertyChange('socialLinks', newSocialLinks);
                                                    }, className: "input-field", placeholder: "https://linkedin.com/company/company" })] })] })))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "border border-gray-200 rounded-lg" }, { children: [(0, jsx_runtime_1.jsxs)("button", __assign({ onClick: function () { return setFooterPanels(function (prev) { return (__assign(__assign({}, prev), { unsubscribe: !prev.unsubscribe })); }); }, className: "flex items-center justify-between w-full p-3 text-left hover:bg-gray-50 transition-colors" }, { children: [(0, jsx_runtime_1.jsx)("h4", __assign({ className: "text-sm font-medium text-gray-700" }, { children: "Unsubscribe" })), (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4 text-gray-500 transition-transform ".concat(footerPanels.unsubscribe ? 'rotate-180' : ''), fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) }))] })), footerPanels.unsubscribe && ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "p-3 border-t border-gray-200 space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Unsubscribe Text" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.unsubscribeText || '', onChange: function (e) { return handlePropertyChange('unsubscribeText', e.target.value); }, className: "input-field", placeholder: "Click here to unsubscribe" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Unsubscribe URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.unsubscribeUrl || '', onChange: function (e) { return handlePropertyChange('unsubscribeUrl', e.target.value); }, className: "input-field", placeholder: "https://company.com/unsubscribe" })] })] })))] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "relative" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field pr-8", placeholder: "5px, 10px, 20px" }), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () { return handlePropertyChange('padding', '5px'); }, className: "absolute right-2 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-gray-600 transition-colors", title: "Reset to default (5px)" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" }) })) }))] }))] })] })));
            case 'socialMedia':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Alignment" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.alignment || 'horizontal', onChange: function (e) { return handlePropertyChange('alignment', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "horizontal" }, { children: "Horizontal" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "vertical" }, { children: "Vertical" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Type" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.type || 'icon', onChange: function (e) { return handlePropertyChange('type', e.target.value); }, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "icon" }, { children: "Icon Only" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "text" }, { children: "Text Only" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "iconText" }, { children: "Icon + Text" }))] }))] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Icon Size" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.iconSize || '24px', onChange: function (e) { return handlePropertyChange('iconSize', e.target.value); }, className: "input-field", placeholder: "24px, 32px, 48px" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Spacing" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.spacing || '16px', onChange: function (e) { return handlePropertyChange('spacing', e.target.value); }, className: "input-field", placeholder: "16px, 24px, 32px" })] })] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-4" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(ColorPicker_1.ColorPicker, { value: selectedComponent.props.backgroundColor || 'transparent', onChange: function (color) { return handlePropertyChange('backgroundColor', color); }, label: "Background Color", placeholder: "Select background color" }) }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Padding" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.padding || '5px', onChange: function (e) { return handlePropertyChange('padding', e.target.value); }, className: "input-field", placeholder: "5px, 10px, 20px" })] })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex items-center justify-between mb-3" }, { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700" }, { children: "Social Media Platforms" })), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () {
                                                var newPlatform = {
                                                    platform: 'Facebook',
                                                    title: 'Facebook',
                                                    imageUrl: 'https://cdn.jsdelivr.net/gh/simple-icons/simple-icons@v9/icons/facebook.svg',
                                                    url: '#'
                                                };
                                                var currentPlatforms = selectedComponent.props.platforms || [];
                                                handlePropertyChange('platforms', __spreadArray(__spreadArray([], currentPlatforms, true), [newPlatform], false));
                                            }, className: "px-3 py-1 text-sm bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors" }, { children: "+ Add Platform" }))] })), (0, jsx_runtime_1.jsx)("div", __assign({ className: "space-y-3" }, { children: (selectedComponent.props.platforms || []).map(function (platform, index) { return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "border border-gray-200 rounded-lg p-3 space-y-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex items-center justify-between" }, { children: [(0, jsx_runtime_1.jsxs)("span", __assign({ className: "text-sm font-medium text-gray-700" }, { children: ["Platform ", index + 1] })), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: function () {
                                                            var currentPlatforms = __spreadArray([], (selectedComponent.props.platforms || []), true);
                                                            currentPlatforms.splice(index, 1);
                                                            handlePropertyChange('platforms', currentPlatforms);
                                                        }, className: "text-red-500 hover:text-red-700 transition-colors", title: "Remove platform" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" }) })) }))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "grid grid-cols-2 gap-3" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: platform.title, onChange: function (e) {
                                                                    var currentPlatforms = __spreadArray([], (selectedComponent.props.platforms || []), true);
                                                                    currentPlatforms[index] = __assign(__assign({}, platform), { title: e.target.value });
                                                                    handlePropertyChange('platforms', currentPlatforms);
                                                                }, className: "w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-primary-500 focus:border-transparent", placeholder: "Facebook, Twitter, etc." })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Icon Image URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: platform.imageUrl, onChange: function (e) {
                                                                    var currentPlatforms = __spreadArray([], (selectedComponent.props.platforms || []), true);
                                                                    currentPlatforms[index] = __assign(__assign({}, platform), { imageUrl: e.target.value });
                                                                    handlePropertyChange('platforms', currentPlatforms);
                                                                }, className: "w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-primary-500 focus:border-transparent", placeholder: "https://example.com/icon.svg" })] })] })), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-xs font-medium text-gray-600 mb-1" }, { children: "Profile URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: platform.url || '', onChange: function (e) {
                                                            var currentPlatforms = __spreadArray([], (selectedComponent.props.platforms || []), true);
                                                            currentPlatforms[index] = __assign(__assign({}, platform), { url: e.target.value });
                                                            handlePropertyChange('platforms', currentPlatforms);
                                                        }, className: "w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-primary-500 focus:border-transparent", placeholder: "https://facebook.com/company" })] })] }), index)); }) }))] })] })));
            default:
                return ((0, jsx_runtime_1.jsx)("div", __assign({ className: "text-gray-500 text-sm" }, { children: "Properties for this component type are not yet implemented." })));
        }
    };
    if (showDeleteConfirm) {
        return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "text-center" }, { children: [(0, jsx_runtime_1.jsxs)("h3", __assign({ className: "text-lg font-medium text-gray-900 mb-4" }, { children: ["Are you sure you want to delete", ' ', (0, jsx_runtime_1.jsx)("span", __assign({ className: "text-primary-600 font-semibold capitalize" }, { children: selectedComponent.type })), ' ', "Component?"] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex justify-center space-x-3" }, { children: [(0, jsx_runtime_1.jsx)("button", __assign({ onClick: cancelDelete, className: "px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors" }, { children: "No" })), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: confirmDelete, className: "px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors" }, { children: "Yes" }))] }))] })));
    }
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: "flex items-center justify-between mb-4" }, { children: (0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex space-x-2" }, { children: [(0, jsx_runtime_1.jsx)("button", __assign({ onClick: handleDuplicate, className: "p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors", title: "Duplicate" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" }) })) })), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: handleDelete, className: "p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors", title: "Delete" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" }) })) }))] })) })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "mb-4" }, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: "text-sm text-gray-500 mb-1" }, { children: "Component Type" })), (0, jsx_runtime_1.jsx)("div", __assign({ className: "text-sm font-medium text-gray-900 capitalize" }, { children: selectedComponent.type }))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "border-t border-gray-200 pt-4" }, { children: [(0, jsx_runtime_1.jsx)("h3", __assign({ className: "text-sm font-medium text-gray-700 mb-3" }, { children: "Properties" })), renderPropertyEditor()] }))] }));
};
exports.ComponentInspector = ComponentInspector;
