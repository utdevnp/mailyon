"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Inspector = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var builderStore_1 = require("../../store/builderStore");
var Inspector = function () {
    var _a = (0, builderStore_1.useBuilderStore)(), selectedComponent = _a.selectedComponent, updateComponent = _a.updateComponent, deleteComponent = _a.deleteComponent, duplicateComponent = _a.duplicateComponent;
    if (!selectedComponent) {
        return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "card p-4" }, { children: [(0, jsx_runtime_1.jsx)("h2", __assign({ className: "text-lg font-semibold text-gray-900 mb-4" }, { children: "Inspector" })), (0, jsx_runtime_1.jsx)("p", __assign({ className: "text-gray-500 text-sm" }, { children: "Select a component to edit its properties" }))] })));
    }
    var handlePropertyChange = function (key, value) {
        var _a;
        updateComponent(selectedComponent.id, {
            props: __assign(__assign({}, selectedComponent.props), (_a = {}, _a[key] = value, _a)),
        });
    };
    var handleDelete = function () {
        if (window.confirm('Are you sure you want to delete this component?')) {
            deleteComponent(selectedComponent.id);
        }
    };
    var handleDuplicate = function () {
        duplicateComponent(selectedComponent.id);
    };
    var renderPropertyEditor = function () {
        switch (selectedComponent.type) {
            case 'header':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Logo URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.logo || '', onChange: function (e) { return handlePropertyChange('logo', e.target.value); }, className: "input-field", placeholder: "https://example.com/logo.png" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Title" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.title || '', onChange: function (e) { return handlePropertyChange('title', e.target.value); }, className: "input-field", placeholder: "Company Name" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Subtitle" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.subtitle || '', onChange: function (e) { return handlePropertyChange('subtitle', e.target.value); }, className: "input-field", placeholder: "Tagline or description" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Background Color" })), (0, jsx_runtime_1.jsx)("input", { type: "color", value: selectedComponent.props.backgroundColor || '#ffffff', onChange: function (e) { return handlePropertyChange('backgroundColor', e.target.value); }, className: "w-full h-10 rounded-lg border border-gray-300" })] })] })));
            case 'text':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Content" })), (0, jsx_runtime_1.jsx)("textarea", { value: selectedComponent.props.content || '', onChange: function (e) { return handlePropertyChange('content', e.target.value); }, className: "input-field", rows: 4, placeholder: "Enter your text content here..." })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Font Size" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.fontSize || '16px', onChange: function (e) { return handlePropertyChange('fontSize', e.target.value); }, className: "input-field" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "12px" }, { children: "12px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "14px" }, { children: "14px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "16px" }, { children: "16px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "18px" }, { children: "18px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "20px" }, { children: "20px" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "24px" }, { children: "24px" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Text Align" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.textAlign || 'left', onChange: function (e) { return handlePropertyChange('textAlign', e.target.value); }, className: "input-field" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "left" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "center" }, { children: "Center" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "right" }, { children: "Right" }))] }))] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Color" })), (0, jsx_runtime_1.jsx)("input", { type: "color", value: selectedComponent.props.color || '#000000', onChange: function (e) { return handlePropertyChange('color', e.target.value); }, className: "w-full h-10 rounded-lg border border-gray-300" })] })] })));
            case 'image':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Image URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.src || '', onChange: function (e) { return handlePropertyChange('src', e.target.value); }, className: "input-field", placeholder: "https://example.com/image.jpg" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Alt Text" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.alt || '', onChange: function (e) { return handlePropertyChange('alt', e.target.value); }, className: "input-field", placeholder: "Description of the image" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Width" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.width || '100%', onChange: function (e) { return handlePropertyChange('width', e.target.value); }, className: "input-field", placeholder: "100% or 300px" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Alignment" })), (0, jsx_runtime_1.jsxs)("select", __assign({ value: selectedComponent.props.align || 'center', onChange: function (e) { return handlePropertyChange('align', e.target.value); }, className: "input-field" }, { children: [(0, jsx_runtime_1.jsx)("option", __assign({ value: "left" }, { children: "Left" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "center" }, { children: "Center" })), (0, jsx_runtime_1.jsx)("option", __assign({ value: "right" }, { children: "Right" }))] }))] })] })));
            case 'button':
                return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "space-y-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Button Text" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.text || '', onChange: function (e) { return handlePropertyChange('text', e.target.value); }, className: "input-field", placeholder: "Click me" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "URL" })), (0, jsx_runtime_1.jsx)("input", { type: "text", value: selectedComponent.props.url || '', onChange: function (e) { return handlePropertyChange('url', e.target.value); }, className: "input-field", placeholder: "https://example.com" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Background Color" })), (0, jsx_runtime_1.jsx)("input", { type: "color", value: selectedComponent.props.backgroundColor || '#3b82f6', onChange: function (e) { return handlePropertyChange('backgroundColor', e.target.value); }, className: "w-full h-10 rounded-lg border border-gray-300" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", __assign({ className: "block text-sm font-medium text-gray-700 mb-1" }, { children: "Text Color" })), (0, jsx_runtime_1.jsx)("input", { type: "color", value: selectedComponent.props.textColor || '#ffffff', onChange: function (e) { return handlePropertyChange('textColor', e.target.value); }, className: "w-full h-10 rounded-lg border border-gray-300" })] })] })));
            default:
                return ((0, jsx_runtime_1.jsx)("div", __assign({ className: "text-gray-500 text-sm" }, { children: "Properties for this component type are not yet implemented." })));
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: "card p-4" }, { children: [(0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex items-center justify-between mb-4" }, { children: [(0, jsx_runtime_1.jsx)("h2", __assign({ className: "text-lg font-semibold text-gray-900" }, { children: "Inspector" })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "flex space-x-2" }, { children: [(0, jsx_runtime_1.jsx)("button", __assign({ onClick: handleDuplicate, className: "p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors", title: "Duplicate" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" }) })) })), (0, jsx_runtime_1.jsx)("button", __assign({ onClick: handleDelete, className: "p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors", title: "Delete" }, { children: (0, jsx_runtime_1.jsx)("svg", __assign({ className: "w-4 h-4", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24" }, { children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" }) })) }))] }))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "mb-4" }, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: "text-sm text-gray-500 mb-1" }, { children: "Component Type" })), (0, jsx_runtime_1.jsx)("div", __assign({ className: "text-sm font-medium text-gray-900 capitalize" }, { children: selectedComponent.type }))] })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: "border-t border-gray-200 pt-4" }, { children: [(0, jsx_runtime_1.jsx)("h3", __assign({ className: "text-sm font-medium text-gray-700 mb-3" }, { children: "Properties" })), renderPropertyEditor()] }))] })));
};
exports.Inspector = Inspector;
