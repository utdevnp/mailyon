{"ast":null,"code":"import { create } from 'zustand';\n// Default template\nconst defaultTemplate = {\n  id: 'default',\n  name: 'New Template',\n  description: 'Start building your email template',\n  components: [],\n  metadata: {\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    version: '1.0.0'\n  },\n  settings: {\n    width: '600px',\n    backgroundColor: 'transparent',\n    fontFamily: 'Arial, sans-serif'\n  }\n};\n\n// Helper function to generate unique ID\nconst generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// Helper function to create component\nconst createComponent = (type, props = {}) => {\n  return {\n    id: generateId(),\n    type,\n    props,\n    children: [],\n    style: {}\n  };\n};\n\n// Helper function to find component by ID\nconst findComponent = (components, id) => {\n  for (const component of components) {\n    if (component.id === id) return component;\n    if (component.children) {\n      const found = findComponent(component.children, id);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\n// Helper function to remove component by ID\nconst removeComponent = (components, id) => {\n  return components.filter(component => {\n    if (component.id === id) return false;\n    if (component.children) {\n      component.children = removeComponent(component.children, id);\n    }\n    return true;\n  });\n};\n\n// Helper function to duplicate component\nconst duplicateComponent = component => {\n  return {\n    ...component,\n    id: generateId(),\n    children: component.children ? component.children.map(child => duplicateComponent(child)) : []\n  };\n};\nexport const useBuilderStore = create((set, get) => ({\n  // State\n  template: defaultTemplate,\n  selectedComponent: null,\n  isDragging: false,\n  history: [defaultTemplate],\n  historyIndex: 0,\n  // Actions\n  addComponent: (component, parentId) => {\n    set(state => {\n      const newTemplate = {\n        ...state.template\n      };\n      if (parentId) {\n        const parent = findComponent(newTemplate.components, parentId);\n        if (parent) {\n          parent.children = parent.children || [];\n          parent.children.push(component);\n        }\n      } else {\n        newTemplate.components.push(component);\n      }\n      newTemplate.metadata.updatedAt = new Date().toISOString();\n\n      // Add to history\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n      return {\n        template: newTemplate,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1\n      };\n    });\n  },\n  updateComponent: (id, updates) => {\n    set(state => {\n      const newTemplate = {\n        ...state.template\n      };\n      const component = findComponent(newTemplate.components, id);\n      if (component) {\n        Object.assign(component, updates);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n\n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1\n        };\n      }\n      return state;\n    });\n  },\n  deleteComponent: id => {\n    set(state => {\n      var _state$selectedCompon;\n      const newTemplate = {\n        ...state.template\n      };\n      newTemplate.components = removeComponent(newTemplate.components, id);\n      newTemplate.metadata.updatedAt = new Date().toISOString();\n\n      // Clear selection if deleted component was selected\n      let newSelectedComponent = state.selectedComponent;\n      if (((_state$selectedCompon = state.selectedComponent) === null || _state$selectedCompon === void 0 ? void 0 : _state$selectedCompon.id) === id) {\n        newSelectedComponent = null;\n      }\n\n      // Add to history\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n      return {\n        template: newTemplate,\n        selectedComponent: newSelectedComponent,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1\n      };\n    });\n  },\n  selectComponent: component => {\n    set({\n      selectedComponent: component\n    });\n  },\n  moveComponent: (id, newIndex) => {\n    set(state => {\n      const newTemplate = {\n        ...state.template\n      };\n      const componentIndex = newTemplate.components.findIndex(c => c.id === id);\n      if (componentIndex !== -1) {\n        const [component] = newTemplate.components.splice(componentIndex, 1);\n        newTemplate.components.splice(newIndex, 0, component);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n\n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1\n        };\n      }\n      return state;\n    });\n  },\n  duplicateComponent: id => {\n    set(state => {\n      const component = findComponent(state.template.components, id);\n      if (component) {\n        const duplicated = duplicateComponent(component);\n        const newTemplate = {\n          ...state.template\n        };\n        newTemplate.components.push(duplicated);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n\n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1\n        };\n      }\n      return state;\n    });\n  },\n  undo: () => {\n    set(state => {\n      if (state.historyIndex > 0) {\n        return {\n          historyIndex: state.historyIndex - 1,\n          template: state.history[state.historyIndex - 1]\n        };\n      }\n      return state;\n    });\n  },\n  redo: () => {\n    set(state => {\n      if (state.historyIndex < state.history.length - 1) {\n        return {\n          historyIndex: state.historyIndex + 1,\n          template: state.history[state.historyIndex + 1]\n        };\n      }\n      return state;\n    });\n  },\n  saveTemplate: () => {\n    const {\n      template\n    } = get();\n    localStorage.setItem('emailTemplate', JSON.stringify(template));\n  },\n  loadTemplate: template => {\n    set(state => {\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), template];\n      return {\n        template,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1,\n        selectedComponent: null\n      };\n    });\n  },\n  exportJSON: () => {\n    const {\n      template\n    } = get();\n    return JSON.stringify(template, null, 2);\n  },\n  exportMJML: () => {\n    // This will be implemented later with MJML integration\n    const {\n      template\n    } = get();\n    return `<!-- MJML export for template: ${template.name} -->`;\n  }\n}));","map":{"version":3,"names":["create","defaultTemplate","id","name","description","components","metadata","createdAt","Date","toISOString","updatedAt","version","settings","width","backgroundColor","fontFamily","generateId","Math","random","toString","substr","createComponent","type","props","children","style","findComponent","component","found","removeComponent","filter","duplicateComponent","map","child","useBuilderStore","set","get","template","selectedComponent","isDragging","history","historyIndex","addComponent","parentId","state","newTemplate","parent","push","newHistory","slice","updateComponent","updates","Object","assign","deleteComponent","_state$selectedCompon","newSelectedComponent","selectComponent","moveComponent","newIndex","componentIndex","findIndex","c","splice","duplicated","undo","redo","length","saveTemplate","localStorage","setItem","JSON","stringify","loadTemplate","exportJSON","exportMJML"],"sources":["/Users/utshabluitel/Projects/email-temp-453/src/store/builderStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { EmailComponent, EmailTemplate, BuilderState, BuilderActions, ComponentType } from '../types';\n\n// Default template\nconst defaultTemplate: EmailTemplate = {\n  id: 'default',\n  name: 'New Template',\n  description: 'Start building your email template',\n  components: [],\n  metadata: {\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    version: '1.0.0',\n  },\n  settings: {\n    width: '600px',\n    backgroundColor: 'transparent',\n    fontFamily: 'Arial, sans-serif',\n  },\n};\n\n// Helper function to generate unique ID\nconst generateId = (): string => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// Helper function to create component\nconst createComponent = (type: ComponentType, props: Record<string, any> = {}): EmailComponent => {\n  return {\n    id: generateId(),\n    type,\n    props,\n    children: [],\n    style: {},\n  };\n};\n\n// Helper function to find component by ID\nconst findComponent = (components: EmailComponent[], id: string): EmailComponent | null => {\n  for (const component of components) {\n    if (component.id === id) return component;\n    if (component.children) {\n      const found = findComponent(component.children, id);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\n// Helper function to remove component by ID\nconst removeComponent = (components: EmailComponent[], id: string): EmailComponent[] => {\n  return components.filter(component => {\n    if (component.id === id) return false;\n    if (component.children) {\n      component.children = removeComponent(component.children, id);\n    }\n    return true;\n  });\n};\n\n// Helper function to duplicate component\nconst duplicateComponent = (component: EmailComponent): EmailComponent => {\n  return {\n    ...component,\n    id: generateId(),\n    children: component.children ? component.children.map(child => duplicateComponent(child)) : [],\n  };\n};\n\nexport const useBuilderStore = create<BuilderState & BuilderActions>((set, get) => ({\n  // State\n  template: defaultTemplate,\n  selectedComponent: null,\n  isDragging: false,\n  history: [defaultTemplate],\n  historyIndex: 0,\n\n  // Actions\n  addComponent: (component: EmailComponent, parentId?: string) => {\n    set((state) => {\n      const newTemplate = { ...state.template };\n      \n      if (parentId) {\n        const parent = findComponent(newTemplate.components, parentId);\n        if (parent) {\n          parent.children = parent.children || [];\n          parent.children.push(component);\n        }\n      } else {\n        newTemplate.components.push(component);\n      }\n      \n      newTemplate.metadata.updatedAt = new Date().toISOString();\n      \n      // Add to history\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n      \n      return {\n        template: newTemplate,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1,\n      };\n    });\n  },\n\n  updateComponent: (id: string, updates: Partial<EmailComponent>) => {\n    set((state) => {\n      const newTemplate = { ...state.template };\n      const component = findComponent(newTemplate.components, id);\n      \n      if (component) {\n        Object.assign(component, updates);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n        \n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        \n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1,\n        };\n      }\n      \n      return state;\n    });\n  },\n\n  deleteComponent: (id: string) => {\n    set((state) => {\n      const newTemplate = { ...state.template };\n      newTemplate.components = removeComponent(newTemplate.components, id);\n      newTemplate.metadata.updatedAt = new Date().toISOString();\n      \n      // Clear selection if deleted component was selected\n      let newSelectedComponent = state.selectedComponent;\n      if (state.selectedComponent?.id === id) {\n        newSelectedComponent = null;\n      }\n      \n      // Add to history\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n      \n      return {\n        template: newTemplate,\n        selectedComponent: newSelectedComponent,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1,\n      };\n    });\n  },\n\n  selectComponent: (component: EmailComponent | null) => {\n    set({ selectedComponent: component });\n  },\n\n  moveComponent: (id: string, newIndex: number) => {\n    set((state) => {\n      const newTemplate = { ...state.template };\n      const componentIndex = newTemplate.components.findIndex(c => c.id === id);\n      \n      if (componentIndex !== -1) {\n        const [component] = newTemplate.components.splice(componentIndex, 1);\n        newTemplate.components.splice(newIndex, 0, component);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n        \n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        \n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1,\n        };\n      }\n      \n      return state;\n    });\n  },\n\n  duplicateComponent: (id: string) => {\n    set((state) => {\n      const component = findComponent(state.template.components, id);\n      if (component) {\n        const duplicated = duplicateComponent(component);\n        const newTemplate = { ...state.template };\n        newTemplate.components.push(duplicated);\n        newTemplate.metadata.updatedAt = new Date().toISOString();\n        \n        // Add to history\n        const newHistory = [...state.history.slice(0, state.historyIndex + 1), newTemplate];\n        \n        return {\n          template: newTemplate,\n          history: newHistory,\n          historyIndex: state.historyIndex + 1,\n        };\n      }\n      \n      return state;\n    });\n  },\n\n  undo: () => {\n    set((state) => {\n      if (state.historyIndex > 0) {\n        return {\n          historyIndex: state.historyIndex - 1,\n          template: state.history[state.historyIndex - 1],\n        };\n      }\n      return state;\n    });\n  },\n\n  redo: () => {\n    set((state) => {\n      if (state.historyIndex < state.history.length - 1) {\n        return {\n          historyIndex: state.historyIndex + 1,\n          template: state.history[state.historyIndex + 1],\n        };\n      }\n      return state;\n    });\n  },\n\n  saveTemplate: () => {\n    const { template } = get();\n    localStorage.setItem('emailTemplate', JSON.stringify(template));\n  },\n\n  loadTemplate: (template: EmailTemplate) => {\n    set((state) => {\n      const newHistory = [...state.history.slice(0, state.historyIndex + 1), template];\n      return {\n        template,\n        history: newHistory,\n        historyIndex: state.historyIndex + 1,\n        selectedComponent: null,\n      };\n    });\n  },\n\n  exportJSON: () => {\n    const { template } = get();\n    return JSON.stringify(template, null, 2);\n  },\n\n  exportMJML: () => {\n    // This will be implemented later with MJML integration\n    const { template } = get();\n    return `<!-- MJML export for template: ${template.name} -->`;\n  },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}