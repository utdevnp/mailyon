{"ast":null,"code":"var _jsxFileName = \"/Users/utshabluitel/Projects/email-temp-453/src/components/Inspector/CodeExport.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ExportSection } from './ExportSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CodeExport = ({\n  template,\n  exportJSON,\n  exportMJML,\n  generateHTML,\n  copyToClipboard\n}) => {\n  _s();\n  const [codeAccordions, setCodeAccordions] = React.useState({\n    json: false,\n    mjml: false,\n    html: false\n  });\n  const toggleAccordion = key => {\n    setCodeAccordions(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(ExportSection, {\n      title: \"JSON Export\",\n      content: exportJSON(),\n      isExpanded: codeAccordions.json,\n      onToggle: () => toggleAccordion('json'),\n      onCopy: () => copyToClipboard(exportJSON(), 'JSON')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExportSection, {\n      title: \"MJML Export\",\n      content: exportMJML(),\n      isExpanded: codeAccordions.mjml,\n      onToggle: () => toggleAccordion('mjml'),\n      onCopy: () => copyToClipboard(exportMJML(), 'MJML')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExportSection, {\n      title: \"HTML Export\",\n      content: generateHTML(),\n      isExpanded: codeAccordions.html,\n      onToggle: () => toggleAccordion('html'),\n      onCopy: () => copyToClipboard(generateHTML(), 'HTML')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeExport, \"abswmav4ObRO52UIduySK16aKV8=\");\n_c = CodeExport;\nvar _c;\n$RefreshReg$(_c, \"CodeExport\");","map":{"version":3,"names":["React","ExportSection","jsxDEV","_jsxDEV","CodeExport","template","exportJSON","exportMJML","generateHTML","copyToClipboard","_s","codeAccordions","setCodeAccordions","useState","json","mjml","html","toggleAccordion","key","prev","className","children","title","content","isExpanded","onToggle","onCopy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/utshabluitel/Projects/email-temp-453/src/components/Inspector/CodeExport.tsx"],"sourcesContent":["import React from 'react';\nimport { ExportSection } from './ExportSection';\nimport { EmailTemplate } from '../../types';\n\ninterface CodeExportProps {\n  template: EmailTemplate;\n  exportJSON: () => string;\n  exportMJML: () => string;\n  generateHTML: () => string;\n  copyToClipboard: (text: string, type: string) => void;\n}\n\nexport const CodeExport: React.FC<CodeExportProps> = ({\n  template,\n  exportJSON,\n  exportMJML,\n  generateHTML,\n  copyToClipboard\n}) => {\n  const [codeAccordions, setCodeAccordions] = React.useState({\n    json: false,\n    mjml: false,\n    html: false\n  });\n\n  const toggleAccordion = (key: keyof typeof codeAccordions) => {\n    setCodeAccordions(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <ExportSection\n        title=\"JSON Export\"\n        content={exportJSON()}\n        isExpanded={codeAccordions.json}\n        onToggle={() => toggleAccordion('json')}\n        onCopy={() => copyToClipboard(exportJSON(), 'JSON')}\n      />\n\n      <ExportSection\n        title=\"MJML Export\"\n        content={exportMJML()}\n        isExpanded={codeAccordions.mjml}\n        onToggle={() => toggleAccordion('mjml')}\n        onCopy={() => copyToClipboard(exportMJML(), 'MJML')}\n      />\n\n      <ExportSection\n        title=\"HTML Export\"\n        content={generateHTML()}\n        isExpanded={codeAccordions.html}\n        onToggle={() => toggleAccordion('html')}\n        onCopy={() => copyToClipboard(generateHTML(), 'HTML')}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWhD,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EACpDC,QAAQ;EACRC,UAAU;EACVC,UAAU;EACVC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC;IACzDC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAIC,GAAgC,IAAK;IAC5DN,iBAAiB,CAACO,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACD,GAAG,GAAG,CAACC,IAAI,CAACD,GAAG;IAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA,CAACF,aAAa;MACZqB,KAAK,EAAC,aAAa;MACnBC,OAAO,EAAEjB,UAAU,CAAC,CAAE;MACtBkB,UAAU,EAAEb,cAAc,CAACG,IAAK;MAChCW,QAAQ,EAAEA,CAAA,KAAMR,eAAe,CAAC,MAAM,CAAE;MACxCS,MAAM,EAAEA,CAAA,KAAMjB,eAAe,CAACH,UAAU,CAAC,CAAC,EAAE,MAAM;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAEF3B,OAAA,CAACF,aAAa;MACZqB,KAAK,EAAC,aAAa;MACnBC,OAAO,EAAEhB,UAAU,CAAC,CAAE;MACtBiB,UAAU,EAAEb,cAAc,CAACI,IAAK;MAChCU,QAAQ,EAAEA,CAAA,KAAMR,eAAe,CAAC,MAAM,CAAE;MACxCS,MAAM,EAAEA,CAAA,KAAMjB,eAAe,CAACF,UAAU,CAAC,CAAC,EAAE,MAAM;IAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAEF3B,OAAA,CAACF,aAAa;MACZqB,KAAK,EAAC,aAAa;MACnBC,OAAO,EAAEf,YAAY,CAAC,CAAE;MACxBgB,UAAU,EAAEb,cAAc,CAACK,IAAK;MAChCS,QAAQ,EAAEA,CAAA,KAAMR,eAAe,CAAC,MAAM,CAAE;MACxCS,MAAM,EAAEA,CAAA,KAAMjB,eAAe,CAACD,YAAY,CAAC,CAAC,EAAE,MAAM;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CWN,UAAqC;AAAA2B,EAAA,GAArC3B,UAAqC;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}